include: 
  - docassemble.gbls:basic-questions-gbls.yml
  - LSLetters-text.yml
  - LSLetters-questions.yml
  - LSLetters-definitions.yml
---
metadata:
  title: |
    Legal Server Letters
  short title: |
    LS Letters
  description: |
    This interview guides a Legal Server user in 
      sending letters or emails to clients and advocates.
  authors:
    - name: Michael Hofrichter
      organization: Houston Volunteer Lawyers
  revision_date: 2019-10-13
  tags: 
    - "sidebar_assignment_program"
    - "Legalserver"
    - "Staff"
    - "everyone"
    - "Everyone"
---
mandatory: True
code: |
  clientmessage.language
  clientmessage.recipient
  clientmessage.text
  if clientmessage.method == "Email":
    LS_send_email
  elif clientmessage.method == "Letter":
    LS_send_letter
  all_done
---
code: |
  if clientmessage.recipient == "client":
    email_sent_ok = send_email(to=client, cc=value('case_email'), template=value(clientmessage.text))
  elif clientmessage.recipient == "advocate":
    email_sent_ok = send_email(to=advocate, cc=value('case_email'), template=value(clientmessage.text))
  elif clientmessage.recipient == "pbadvocate":
    email_sent_ok = send_email(to=pbadvocate, cc=value('case_email'), template=value(clientmessage.text))
---
code: |
  email_copy_sent_ok = send_email(to=value('case_email'), template=LetterGenerated, attachments=[letter_to_client.pdf, letter_to_client.docx])
---
code: |
  if case_email.count('@') > 0:
    if case_email.count('legalserver.org') > 0: 
      if print(case_email[-25]) == "@hvl-demo.legalserver.org":
        casenumber = (print(case_email[(len(case_email)-25)]))
      elif case_email == "@hvl.legalserver.org": 
        casenumber = (print(case_email[(len(case_email)-20)]))
      else:
        casenumber = (print(case_email[(case_email.find('@')-1)]))
    else: 
      casenumber = (print(case_email[(case_email.find('@')-1)]))
  else:
    casenumber = case_email
---
modules:
  - docassemble.base.util
---
objects:
  - clientmessage: DAObject
  - pbadvocate: Individual
---
question: |
  All Done
speak_text: True
ga id: screening_result
subquestion: |
  You're all done. Please feel free to close this window.
section: conclusion
buttons:
  - Exit: exit
sets: all_done
---
question: |
  Email Sent
field: LS_send_email
subquestion: | 
  % if email_sent_ok:
  Email sent to ${ clientmessage.recipient }.
  % else:
  Error sending email to to ${ clientmessage.recipient }.
  % endif
---
attachment: 
  name: letter
  filename: L${ clientmessage.text }_${ format_date(today(), format='yyyy-MM-dd')}
  docx template file: Letterhead-client.docx
  valid formats: 
    - pdf
    - docx
  variable name: letter_to_client
---
question: |
  Letter Generated
subquestion: | 
  % if email_copy_sent_ok:
  The letter was generated and sent to the case email. It can also be downloaded as a [PDF](${ letter_to_client.pdf.url_for() }) or a [DOCX](${ letter_to_client.docx.url_for() }) file. 
  % else: 
  The letter was generated and *not* sent to the case email. It can be downloaded as a [PDF](${ letter_to_client.pdf.url_for() }) or a [DOCX](${ letter_to_client.docx.url_for() }) file.
  % endif
field: LS_send_letter
---
template: LetterGenerated
subject: Letter Generated by Docassemble
content: | 
  The attached letter was generated by docassemble for this case. 

  It is to be sent by mail to ${ clientmessage.recipient }. 
