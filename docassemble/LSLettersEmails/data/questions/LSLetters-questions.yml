---
question: |
  Method
subquestion: |
  How do you want to send the message to the recipient?
field: clientmessage.method
buttons: 
  - Email
  - Letter
need: 
  - clientmessage.text
  - correct_letter_text
---
# question: |
#   Case Email
# subquestion: |
#   What is the case email?
# fields:
#   - Email: case_email
#     datatype: email
---
generic object: Individual
question: |
  ${capitalize(x.possessive('email address'))}
fields:
  - Email: x.email
    datatype: email
---
generic object: Individual
question: |
  ${capitalize(x.possessive('phone number'))}
fields:
  - phone number: x.phone_number
    validate: phone_number_is_valid
---
generic object: Individual
question: |
  ${capitalize(x.possessive('firm'))}
fields:
  - firm: x.firm
---
generic object: Individual
question: |
  ${capitalize(x.possessive('gender'))}
field: x.gender
choices: 
  - Male: male
  - Female: female
  - Other: neutral
---
question: |
  Case Number
fields:
  - Case Number: casenumber
---
question: |
  Recipient
subquestion: |
  Who is the recipient?

  Client: ${ client }

  % if defined('client.email'):
  Email: ${ client.email }
  % else: 
  Email: No Client email address
  % endif

  % if defined('pbadvocate.name.last'):
  Volunteer Attorney: ${ pbadvocate }

    % if defined('pbadvocate.email'):
  Email: ${ pbadvocate.email }
    % else: 
  Email: No volunteer email address
    % endif
  % endif
field: clientmessage.recipient
buttons: 
  - "${ client.name.full() }, Client": client
 # - "${ advocate.name.full() }, advocate": advocate
  - "${ the_pbadvocate }, Pro Bono Volunteer": pbadvocate
---
question: |
  Sender
subquestion: 
  Who is the Sender?
field: clientmessage.sender
buttons: 
  - "${ advocate.name.full() }, advocate": advocate
  - "${ initiator.name.full() }, user": initiator
---
question: | 
  Language  
subquestion: 
  What language should the letter be in?  
field: clientmessage.language
choices: 
  - English: en
    default: True
  - Spanish: es
  - Chinese: zo
  - Vietnamese: vi
---
question: | 
  Language  
subquestion: 
  What language does the client speak?  
field: client.language
choices: 
  - English: en
    default: True
  - Spanish: es
  - Chinese: zo
  - Vietnamese: vi
---
generic object: Individual
question: |
  ${capitalize(x.possessive('address'))}
fields:
  - address: x.address.address
    address autocomplete: True
  - unit: x.address.unit
    required: False
  - city: x.address.city
  - state: x.address.state
    code: |
      states_list()
    default: "TX"
  - zip: x.address.zip
  - county: x.address.county
    required: False
---
question: | 
  Is this the correct letter?
subquestion: |
  % if clientmessage.recipient == "pbadvocate":
  Recipient: ${ pbadvocate }
  
  Email: ${ pbadvocate.email }
  % else: 
  Recipient: ${ client }
  
  Email: ${ client.email }
  % endif

  Subject: ${ value(clientmessage.textoption).subject }

  ${ value(clientmessage.textoption) }
yesno: correct_letter_text
section: letter
ga id: confirm_letter
---
question: | 
  Any Edits?
subquestion: |
  % if clientmessage.recipient == "pbadvocate":
  Recipient: ${ pbadvocate }

  Email: ${ pbadvocate.email }
  % else: 
  Recipient: ${ client }
  
  Email: ${ client.email }
  % endif

  Subject: ${ value(clientmessage.textoption).subject } 
fields: 
  - no label: clientmessage.text
    datatype: area
    rows: 20
    default: ${ value(clientmessage.textoption) }
section: letter
ga id: edit_letter
---
question: |
  All Done
speak_text: True
ga id: all_done
subquestion: |
  You're all done. Please feel free to close this window.
section: conclusion
buttons:
  - Exit: exit
sets: all_done
---
question: |
  Email Sent
field: LS_send_email
subquestion: | 
  % if email_sent_ok:
  Email sent to ${ clientmessage.recipient } and the case notes.
  % else:
    % if email_copy_sent_ok:
  Error sending email to to ${ clientmessage.recipient }. It can be downloaded as letter instead of an email either as a **[PDF](${ letterhead_choice.pdf.url_for() })** or a **[DOCX](${ letterhead_choice.docx.url_for() })** file. The letters were sent to the case notes.
  
  Note: PDF versions of the letter will not properly print an envelope from Google Chrome. It must be opened in your local PDF software or in Microsoft Word to properly print an envelope. 
    % else: 
  Error sending email to to ${ clientmessage.recipient }. It can be downloaded as letter instead of an email either as a **[PDF](${ letterhead_choice.pdf.url_for() })** or a **[DOCX](${ letterhead_choice.docx.url_for() })** file. The letters werenot sent to the case
  
  Note: PDF versions of the letter will not properly print an envelope from Google Chrome. It must be opened in your local PDF software or in Microsoft Word to properly print an envelope. 
    % endif
  % endif
section: sent
ga id: email_sent
---
question: |
  Letter Generated
subquestion: | 
  % if email_copy_sent_ok:
  The letter was generated and sent to the case email. It can also be downloaded as a [PDF](${ letterhead_choice.pdf.url_for() }) or a [DOCX](${ letterhead_choice.docx.url_for() }) file. 
  % else: 
  The letter was generated and *not* sent to the case email. It can be downloaded as a [PDF](${ letterhead_choice.pdf.url_for() }) or a [DOCX](${ letterhead_choice.docx.url_for() }) file.
  % endif

  Any attachments included with the mailed letter need to be referenced in a separate attachment/case note. 
  
  Note: PDF versions of the letter will not properly print an envelope from Google Chrome. It must be opened in your local PDF software or in Microsoft Word to properly print an envelope. 
field: LS_send_letter
section: sent
ga id: letter_generated
---
question: |
  Letter Generated
subquestion: | 
  % if email_sent_ok_to_postalmethods:
  The letter was generated and sent to PostalMethods case email. It can also be downloaded as a [PDF](${ letterhead_choice.pdf.url_for() }) or a [DOCX](${ letterhead_choice.docx.url_for() }) file. 
  % else: 
  The letter was generated and *not* sent to the case email. It can be downloaded as a [PDF](${ letterhead_choice.pdf.url_for() }) or a [DOCX](${ letterhead_choice.docx.url_for() }) file.
  % endif

  Any attachments included with the mailed letter need to be referenced in a separate attachment/case note. 
  
  Note: PDF versions of the letter will not properly print an envelope from Google Chrome. It must be opened in your local PDF software or in Microsoft Word to properly print an envelope. 
field: LS_send_letter_via_postalmethods
section: sent
ga id: letter_generated_via_postalmethods
---
question: |
  Special Problem Code
subquestion: |
  What is the special problem code of the case? 
field: ls_fields.special_legal_problem_code
---
question: |
  Attachments
fields: 
  - Do you want to add any attachments to this email?: attachments_yes
    datatype: yesnoradio
  - Files to Attach: email_attachment_files
    datatype: files
    show if: attachments_yes
---
question: |
  How do you want to email LegalServer?
field: bcc_case_email
buttons: 
  - Blind Carbon Copy (BCC): True
  - Carbon Copy (CC): False
---
generic object: DACatchAll
question: |
  What is ${ x.object_name() }?
fields:
  - no label: x.value
validation code: |
  define(x.instanceName, x.value)
---
if: |
  x.context == 'float' or (x.context == 'add' and isinstance(x.operand, float))
generic object: DACatchAll
question: |
  How much is ${ x.object_name() }?
fields:
  - Amount: x.value
    datatype: currency
validation code: |
  define(x.instanceName, x.value)
---
if: |
  x.context == 'int' or (x.context == 'add' and isinstance(x.operand, int))
generic object: DACatchAll
question: |
  How much is ${ x.object_name() }?
fields:
  - Amount: x.value
    datatype: integer
validation code: |
  define(x.instanceName, x.value)
---
if: |
  x.context == 'str' and x.instanceName.lower() == 'signature'
generic object: DACatchAll
question: |
  Sign your name
signature: x.value
validation code: |
  define(x.instanceName, x.value)
---
if: |
  "time" in x.instanceName.lower()
generic object: DACatchAll
question: |
  What time is ${ x.object_name() }?
fields:
  - Time: x.value
    datatype: time
validation code: |
  define(x.instanceName, x.value)
---
if: |
  "date" in x.instanceName.lower()
generic object: DACatchAll
question: |
  What date is ${ x.object_name() }?
fields:
  - Date: x.value
    datatype: date
validation code: |
  define(x.instanceName, x.value)
---
question: |
  Do you want to automate the letter via PostalMethods?
field: send_via_postalmethods
buttons:
  - Print and Mail
  - PostalMethods
---