question: |
  Method
subquestion: |
  How do you want to send the message to the recipient?
field: clientmessage.method
buttons: 
  - Email
  - Letter
need: 
  - clientmessage.text
  - correct_letter_text
---
# question: |
#   Case Email
# subquestion: |
#   What is the case email?
# fields:
#   - Email: case_email
#     datatype: email
---
question: |
  Client Email
subquestion: |
  What is the client's email?
fields:
  - Email: client.email
    datatype: email
---
question: |
  User's Email
subquestion: |
  What is the user's email?
fields:
  - Email: initiator.email
    datatype: email
---
question: |
  Advocate Email
subquestion: |
  What is the Advocate's email?
fields:
  - Email: advocate.email
    datatype: email
---
question: |
  Pro Bono Advocate Email
subquestion: |
  What is the Pro Bono Advocate's email?
fields:
  - Email: pbadvocate.email
    datatype: email
---
question: |
  Pro Bono Advocate Firm
subquestion: |
  What is the Pro Bono Advocate's firm?
fields:
  - Firm: pbadvocate.firm
---
question: |
  Pro Bono Advocate Phone
subquestion: |
  What is the Pro Bono Advocate's Phone Number?
fields:
  - Phone: pbadvocate.phone_number
---
question: |
  Recipient
subquestion: 
  Who is the recipient?

  Client: ${ client }
  % if defined('client.email'):
  Email: ${ client.email }
  % else: 
  Email: No Client email address
  % endif
  Address: ${ client.address.block() }

  % if defined('pbadvocate.name.last'):
  Volunteer Attorney: ${ pbadvocate }
    % if defined('pbadvocate.email'):
  Email: ${ pbadvocate.email }
    % else: 
  Email: No volunteer email address
    % endif
  Address: ${ pbadvocate.address.block() }
  % endif
field: clientmessage.recipient
buttons: 
  - "${ client.name.full() }, Client": client
 # - "${ advocate.name.full() }, advocate": advocate
  - "${ the_pbadvocate }, Pro Bono Volunteer": pbadvocate
---
question: |
  Sender
subquestion: 
  Who is the Sender?
field: clientmessage.sender
buttons: 
  - "${ advocate.name.full() }, advocate": advocate
  - "${ initiator.name.full() }, user": initiator
---
question: | 
  Gender 
subquestion: 
  What is the recipient's gender? 
field: client.gender
choices: 
  - Male: male
  - Female: female
  - Other: neutral
---
question: | 
  Gender 
subquestion: 
  What is the recipient's gender? 
field: advocate.gender
choices: 
  - Male: male
  - Female: female
  - Other: neutral
---
question: | 
  Gender 
subquestion: 
  What is the recipient's gender? 
field: pbadvocate.gender
choices: 
  - Male: male
  - Female: female
  - Other: neutral
---
question: | 
  Language  
subquestion: 
  What language should the letter be in?  
field: clientmessage.language
choices: 
  - English: en
    default: True
  - Spanish: es
  - Chinese: zo
  - Vietnamese: vi
---
question: | 
  Language  
subquestion: 
  What language does the client speak?  
field: client.language
choices: 
  - English: en
    default: True
  - Spanish: es
  - Chinese: zo
  - Vietnamese: vi
---
generic object: Individual
question: |
  ${capitalize(x.possessive('address'))}
fields:
  - address: x.address.address
    address autocomplete: True
  - unit: x.address.unit
    required: False
  - city: x.address.city
  - state: x.address.state
    code: |
      states_list()
    default: "TX"
  - zip: x.address.zip
  - county: x.address.county
    required: False